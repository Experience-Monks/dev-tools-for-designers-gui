'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = registerRequireExtension;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _mimeTypes = require('mime-types');

var _mimeTypes2 = _interopRequireDefault(_mimeTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Initializes the node.js hook that allows us to intercept files loaded by 
 * node.js and rewrite them. This method along with {@link initializeProtocolHook} 
 * are the top-level methods that electron-compile actually uses to intercept 
 * code that Electron loads.
 *  
 * @param  {CompilerHost} compilerHost  The compiler host to use for compilation.
 */
function registerRequireExtension(compilerHost) {
  _lodash2.default.each(Object.keys(compilerHost.compilersByMimeType), function (mimeType) {
    var ext = _mimeTypes2.default.extension(mimeType);

    require.extensions['.' + ext] = function (module, filename) {
      var _compilerHost$compile = compilerHost.compileSync(filename);

      var code = _compilerHost$compile.code;

      module._compile(code, filename);
    };
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXF1aXJlLWhvb2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBV3dCLHdCQUF3Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBakMsU0FBUyx3QkFBd0IsQ0FBQyxZQUFZLEVBQUU7QUFDN0QsbUJBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLG1CQUFtQixDQUFDLEVBQUUsVUFBQyxRQUFRLEVBQUs7QUFDbEUsUUFBSSxHQUFHLEdBQUcsb0JBQVUsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDOztBQUV4QyxXQUFPLENBQUMsVUFBVSxPQUFLLEdBQUcsQ0FBRyxHQUFHLFVBQUMsTUFBTSxFQUFFLFFBQVEsRUFBSztrQ0FDdkMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7O1VBQTFDLElBQUkseUJBQUosSUFBSTs7QUFDVCxZQUFNLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztLQUNqQyxDQUFDO0dBQ0gsQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoicmVxdWlyZS1ob29rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcclxuaW1wb3J0IG1pbWVUeXBlcyBmcm9tICdtaW1lLXR5cGVzJztcclxuXHJcbi8qKlxyXG4gKiBJbml0aWFsaXplcyB0aGUgbm9kZS5qcyBob29rIHRoYXQgYWxsb3dzIHVzIHRvIGludGVyY2VwdCBmaWxlcyBsb2FkZWQgYnkgXHJcbiAqIG5vZGUuanMgYW5kIHJld3JpdGUgdGhlbS4gVGhpcyBtZXRob2QgYWxvbmcgd2l0aCB7QGxpbmsgaW5pdGlhbGl6ZVByb3RvY29sSG9va30gXHJcbiAqIGFyZSB0aGUgdG9wLWxldmVsIG1ldGhvZHMgdGhhdCBlbGVjdHJvbi1jb21waWxlIGFjdHVhbGx5IHVzZXMgdG8gaW50ZXJjZXB0IFxyXG4gKiBjb2RlIHRoYXQgRWxlY3Ryb24gbG9hZHMuXHJcbiAqICBcclxuICogQHBhcmFtICB7Q29tcGlsZXJIb3N0fSBjb21waWxlckhvc3QgIFRoZSBjb21waWxlciBob3N0IHRvIHVzZSBmb3IgY29tcGlsYXRpb24uXHJcbiAqLyBcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVnaXN0ZXJSZXF1aXJlRXh0ZW5zaW9uKGNvbXBpbGVySG9zdCkge1xyXG4gIF8uZWFjaChPYmplY3Qua2V5cyhjb21waWxlckhvc3QuY29tcGlsZXJzQnlNaW1lVHlwZSksIChtaW1lVHlwZSkgPT4ge1xyXG4gICAgbGV0IGV4dCA9IG1pbWVUeXBlcy5leHRlbnNpb24obWltZVR5cGUpO1xyXG4gICAgXHJcbiAgICByZXF1aXJlLmV4dGVuc2lvbnNbYC4ke2V4dH1gXSA9IChtb2R1bGUsIGZpbGVuYW1lKSA9PiB7XHJcbiAgICAgIGxldCB7Y29kZX0gPSBjb21waWxlckhvc3QuY29tcGlsZVN5bmMoZmlsZW5hbWUpO1xyXG4gICAgICBtb2R1bGUuX2NvbXBpbGUoY29kZSwgZmlsZW5hbWUpO1xyXG4gICAgfTtcclxuICB9KTtcclxufVxyXG4iXX0=